extends ../layout.pug

block content
	header.site-header
		include ../shared/header.pug

	.container(style='display: flex;')
		include nav.pug

		.js-nav-nodes(style='padding: 15px 30px 15px 15px;')
			h2(data-position='0') Site
			.panel.panel-default(data-position='0.0', duck-table='Sites', duck-function='update', duck-key='Id', duck-key-value= site.Id, duck-range='_Id', duck-range-value= site._Id)
				.panel-heading: h3.panel-title Settings
				.panel-body.form-horizontal
					- var name = 'name', title = 'Name', value = site.name;
					include ../robots/string.pug

					- name = 'domain', value = site.domain, title= 'Domain (url)';
					include ../robots/string.pug

					- name = 'title'; title = 'Title'
					include ../robots/string.pug
					//include ../robots/stringList.pug

					- name = 'description'; title = 'Description';
					include ../robots/string.pug
					//include ../robots/number.pug

					.form-group(duck-field='scripts', duck-type='array')
						label.col-sm-2.control-label Scripts #[br] (3rd Party)
						.col-sm-10
							div
								for script in site.scripts ? site.scripts : [{}]
									.array-item(duck-type='object')
										.input-group
											.input-group-addon(data-sort='handle')
												i.fa.fa-arrows-v(aria-hidden='true')
											.panel.panel-default(data-function='accordion')
												.panel-heading(role='tab', aria-expanded='false')= `${script.name || script.src || 'New Script'}${script.isDisabled ? ' ----- (disabled)' : ''}`
												.panel-body(role='tabpanel', aria-hidden='true')
													- name = 'name'; title='Name'; value = script.name;
													include ../robots/string.pug

													- name = 'src'; title='Source'; value = script.src; var required = true;
													include ../robots/string.pug
													- required = false; title = null;

													.form-group
														.col-sm-10.col-sm-push-2
															.checkbox(duck-type='bool', duck-field='isDisabled')
																label.btn.btn-danger
																	input(type='checkbox', duck-value, checked= script.isDisabled)
																	| Disable
											.input-group-btn
												button.btn.btn-danger(duck-button='delete')
													i.fa.fa-times(aria-hidden='true')
							p.text-right
								button.btn.btn-default(duck-button='add') Add Script

					.form-group(duck-field='styles', duck-type='array')
						label.col-sm-2.control-label Styles #[br] (3rd Party)
						.col-sm-10
							div
								for style in site.styles ? site.styles : [{}]
									.array-item(duck-type='object')
										.input-group
											.input-group-addon(data-sort='handle')
												i.fa.fa-arrows-v(aria-hidden='true')
											.panel.panel-default(data-function='accordion')
												.panel-heading(role='tab', aria-expanded='false')= `${style.name || style.src || 'New style'}${style.isDisabled ? ' ----- (disabled)' : ''}`
												.panel-body(role='tabpanel', aria-hidden='true')
													- name = 'name'; title='Name'; value = style.name;
													include ../robots/string.pug

													- name = 'src'; title='Source'; value = style.src; var required = true;
													include ../robots/string.pug
													- required = false; title = null;

													.form-group
														.col-sm-10.col-sm-push-2
															.checkbox(duck-type='bool', duck-field='isDisabled')
																label.btn.btn-danger
																	input(type='checkbox', duck-value, checked= style.isDisabled)
																	| Disable
											.input-group-btn
												button.btn.btn-danger(duck-button='delete')
													i.fa.fa-times(aria-hidden='true')
							p.text-right
								button.btn.btn-default(duck-button='add') Add Style

					.alert.alert-danger(style='margin-bottom: 0;')
						h3(style='margin-top: 0;') To Do
						ul
							li Theme CRUD
							li Theme Select
				.panel-footer
					.text-right
						button.btn.btn-primary(duck-button='submit') Save

			h3(data-position='0.1') Layouts
			div(data-function='accordion', duck-table='Sites', duck-function='update', duck-key='Id', duck-key-value= site.Id, duck-range='_Id', duck-range-value= site._Id)
				div(duck-type='array', duck-field='layouts')
					div
						for layout, i in site.layouts ? site.layouts : [{}]
							.array-item(duck-type='object')
								.input-group
									.input-group-addon(data-sort='handle')
										i.fa.fa-arrows-v(aria-hidden='true')
									.panel.panel-default(data-function='accordion')
										.panel-heading(role='tab', aria-expanded='false')= layout.name || 'New Layout'
										div(role='tabpanel', aria-hidden='true')
											.panel-body
												.form-horizontal
													- name = 'name'; value = layout.name; title = 'Name';
													include ../robots/string.pug

												table.table.table-bordered.mb-0
													thead
														tr
															th.col-xs-6 Body
															th.col-xs-6 Preview
													tbody
														tr(duck-field="pug", duck-type='code')
															td.p-0(data-function='codemirror')= layout.pug
															td: div(data-codemirror='preview')
											.panel-footer.text-right
												button.btn.btn-primary(duck-button='submit') Save
									.input-group-btn
										button.btn.btn-danger(duck-button='delete')
											i.fa.fa-times(aria-hidden='true')
					p.text-right
						button.btn.btn-default(duck-button='add') Add Layout

			h3(data-position='0.2') Controls
			div(data-function='accordion', duck-table='Sites', duck-function='update', duck-key='Id', duck-key-value= site.Id, duck-range='_Id', duck-range-value= site._Id)
				div(duck-type='array', duck-field='controls')
					div
						for control, i in site.controls ? site.controls : [{}]
							.array-item(duck-type='object')
								.input-group
									.input-group-addon(data-sort='handle')
										i.fa.fa-arrows-v(aria-hidden='true')
									.panel.panel-default(data-function='accordion')
										.panel-heading(role='tab', aria-expanded='false')= control.name || 'New Control'
										div(role='tabpanel', aria-hidden='true')
											.panel-body
												.form-horizontal
													- name = 'name'; value = control.name; title = 'Name';
													include ../robots/string.pug

													- name = 'category'; value = control.category; title = 'Category';
													include ../robots/string.pug

													- name = 'documentation'; value = control.documentation; title = 'Documentation';
													include ../robots/wysiwyg.pug

												table.table.table-bordered.mb-0
													thead
														tr
															th.col-xs-6 Body
															th.col-xs-6 Preview
													tbody
														tr(duck-field="pug", duck-type='code')
															td.p-0(data-function='codemirror')= control.pug
															td: div(data-codemirror='preview')
											.panel-footer.text-right
												button.btn.btn-primary(duck-button='submit') Save
									.input-group-btn
										button.btn.btn-danger(duck-button='delete')
											i.fa.fa-times(aria-hidden='true')
					p.text-right
						button.btn.btn-default(duck-button='add') Add Control

			h2(data-position='1') Pages
			.panel.panel-default(duck-table='Pages', duck-function='add', duck-key='Id', duck-key-value= site.Id, duck-range='_Id', duck-range-value= uuid())
				.panel-heading New Page
				.panel-body
					.form-horizontal
						- name = 'name'; title = 'Name'; value = null; var required = true;
						include ../robots/string.pug

						- name = 'url'; title = 'URL';
						include ../robots/string.pug

						- name = 'layout'; title = 'Layout'; options = site.layouts; var valueField = 'name';
						include ../robots/select.pug
						- required = false;
						//- name = 'factory'; title = 'Factories'; options = factories; valueField = '_Id'; var displayField = 'name';
						//include ../robots/selectList.pug

				.panel-footer.text-right
					button.btn.btn-primary(duck-button='submit', type='submit') Save

			for page in pages ? pages : []
				.panel.panel-default(duck-table='Pages', duck-function='update', duck-key='Id', duck-key-value= site.Id, duck-range='_Id', duck-range-value= page._Id)
					.panel-heading= page.name
					.panel-body
						.form-horizontal
							- name = 'name'; title = 'Name'; value = null; var required = true; value = page.name;
							include ../robots/string.pug

							- name = 'url'; title = 'URL';  value = page.url;
							include ../robots/string.pug

							- name = 'layout'; title = 'Layout'; options = site.layouts; var valueField = 'name'; value = page.layout;
							include ../robots/select.pug
							- required = false;

							.form-group
								label.col-sm-2.control-label Robots
								.col-sm-10(duck-type='array', duck-field='robots')
									div
										for robot, i in page.robots ? page.robots : [{}]
											.array-item(duck-type='object')
												.input-group
													.input-group-addon(data-sort='handle')
														i.fa.fa-arrows-v(aria-hidden='true')

													.panel.panel-default(data-function='accordion')
														.panel-heading(role='tab', aria-expanded='false')= robot.name || 'New Robot'
														div(role='tabpanel', aria-hidden='true')
															.panel-body
																.form-horizontal
																	- name = 'Id'; value = robot.Id; title = 'Robot'; options = robots; valueField = '_Id'; displayField = 'name';
																	include ../robots/select.pug

																	- name = 'home'; value = robot.home || 'content'; title = 'Home';
																	include ../robots/string.pug
													.input-group-btn
														button.btn.btn-danger(duck-button='delete')
															i.fa.fa-times(aria-hidden='true')
									p.text-right
										button.btn.btn-default(duck-button='add') Add Robot

					.panel-footer.text-right
						button.btn.btn-primary(duck-button='submit', type='submit') Save

			h2(data-position='2') Factories
			p.lead A <em>Robot Factory</em> is used to define what kind of <em>Robots</em> you can make.
			- var newFactoryId = uuid();
			if user && user.isAdmin
				.alert.alert-danger
					p: strong To Do
					h6 Primary
					ul
						li On create, clear name and attributes
						li On create, give user a proper notification
					h6 Secondary
					ul
						li Default value
						li Is Editable
						li Radio
						li List of Boolean

			div(data-position='2.0', robot-factory='factory')
				h3 Create a Robot Factory
				.panel.panel-default(duck-table='RobotFactories', duck-function='add', duck-key='Id', duck-key-value= site.Id, duck-range='_Id', duck-range-value= newFactoryId)
					.panel-heading New Factory
					.panel-body.form-horizontal
					

						- name = 'name', title = 'Factory Type';
						include ../robots/string.pug

						p Now you can dictate what your #[strong Robots] can know.

						.form-group
							label.col-sm-2.control-label Attribtues
							.col-sm-10(duck-field='schema', duck-type='array')
								div
									.array-item(duck-type='object')
										.input-group
											.input-group-addon(data-sort='handle')
												i.fa.fa-arrows-v(aria-hidden='true')
											.panel.panel-default
												.panel-heading New Attribute
												.panel-body
													- name = 'name', title = 'Name';
													include ../robots/string.pug

													.form-group
														label.col-sm-2.control-label Type
														.col-sm-10(duck-field='type', duck-type='select')
															select.form-control(duck-value)
																option(value='String') String (small amount of text)
																option(value='Wysiwyg') Text Editor (a lot of text)
																option Number
																option(value='Bool') Boolean (true/false)
																option Image
																option(value='Robot') Another Robot
																option(value='Select') Select from List
																option Radio
																option Date
																option Color
																option File

													- name = 'isList'; title = 'Is a List';
													include ../robots/checkbox.pug

													- name = 'options'; title = 'Options (if applicable)'; options = null; valueField = null; displayField = null; 
													include ../robots/stringList.pug

											.input-group-btn
												button.btn.btn-danger(duck-button='delete')
													i.fa.fa-times(aria-hidden='true')
								p.text-right
									button.btn.btn-default(duck-button='add') Add Attribute
					.panel-footer
						.text-right
							button.btn.btn-primary(duck-button='submit') Save

			div(data-position='2.1', robot-factory='factory')
				h3 Edit Factories
				
				for factory in factories
					.panel.panel-default(duck-table='RobotFactories', duck-function='update', duck-key='Id', duck-key-value= site.Id, duck-range='_Id', duck-range-value= factory._Id)
						.panel-heading= factory.name
						.panel-body.form-horizontal
							- name = 'name'; title = 'Name'; value = factory.name;
							include ../robots/string.pug


							.form-group
								label.col-sm-2.control-label Attribtues
								.col-sm-10(duck-field='schema', duck-type='array')
									div
										for attribute in factory.schema ? factory.schema : [{}]
											.array-item(duck-type='object')
												.input-group
													.input-group-addon(data-sort='handle')
														i.fa.fa-arrows-v(aria-hidden='true')
													.panel.panel-default(data-function='accordion')
														.panel-heading(role='tab', aria-expanded='false')= attribute.name
														.panel-body(role='tabpanel', aria-hidden='true')
															- name = 'name'; title = 'Name'; value = attribute.name;
															include ../robots/string.pug

															.form-group
																label.col-sm-2.control-label Type
																.col-sm-10(duck-field='type', duck-type='select')
																	select.form-control(duck-value)
																		option(selected= attribute.type === 'String', value='String') String (small amount of text)
																		option(selected= attribute.type === 'Wysiwyg', value='Wysiwyg') Text Editor (a lot of text)
																		option(selected= attribute.type === 'Number') Number
																		option(selected= attribute.type === 'Bool', value='Bool') Boolean (true/false)
																		option(selected= attribute.type === 'Image') Image
																		option(selected= attribute.type === 'Robot', value='Robot') Another Robot
																		option(selected= attribute.type === 'Select', value='Select') Select from List
																		option(selected= attribute.type === 'Radio') Radio
																		option(selected= attribute.type === 'Date') Date
																		option(selected= attribute.type === 'Color') Color
																		option(selected= attribute.type === 'File') File

															- name = 'isList'; title = 'Is a List'; value = attribute.isList;
															include ../robots/checkbox.pug

															- name = 'options'; title = 'Options (if applicable)'; var values = attribute.options; options = null; valueField = null; displayField = null; 
															include ../robots/stringList.pug

													.input-group-btn
														button.btn.btn-danger(duck-button='delete')
															i.fa.fa-times(aria-hidden='true')
									p.text-right
										button.btn.btn-default(duck-button='add') Add Attribute

						.panel-footer.text-right
							button.btn.btn-primary(duck-button='submit') Save

			.panel.panel-info(data-function='accordion', data-position='2.2')
				.panel-heading(role='tab', aria-expanded='false'): h3.panel-title Attribute Type Refereance
				div(role='tabpanel', aria-hidden='true')
					.panel-body.form-horizontal(duck-table='test', duck-function='add', duck-key='id')
						- name = 'String', defaultValue, defaultValues, title = null;
						include ../robots/string.pug

						- name = 'List of Strings'
						include ../robots/stringList.pug

						- name = 'Number'
						include ../robots/number.pug

						- name = 'List of Numbers'
						include ../robots/numberList.pug

						- name = 'Date'
						include ../robots/date.pug

						- name = 'List of Dates'
						include ../robots/dateList.pug

						//- name = 'User'
							include ../robots/user.pug

						//- name = 'List of Users'
							include ../robots/userList.pug

						- name = 'Text Editor'
						include ../robots/wysiwyg.pug

						- name = 'List of Text Editors'
						include ../robots/wysiwygList.pug

						- name = 'Checkbox'
						include ../robots/checkbox.pug

						- var radioOptions = ['Radio 1', 'Radio 2', 'Radio 3'];name = 'radio';
						include ../robots/radio.pug

						- name = 'Image'
						include ../robots/image.pug

						- name = 'Color'
						include ../robots/color.pug


			h2(data-position='3') Robot Parts
			for factory, i in factories ? factories : []
				h3(data-position=`4.${i}`)= factory.name
				.panel.panel-default(data-function='accordion', duck-table='RobotParts', duck-function='add', duck-key='Id', duck-key-value= factory._Id, duck-range='_Id', duck-range-value= uuid())
						.panel-heading(role='tab', aria-expanded= 'true') New Robot
						div(role='tabpanel', aria-hidden= 'false')
							.panel-body
								.form-horizontal
									for attribute in factory.schema ? factory.schema : []
										- value = null; name = attribute.name; title = attribute.name;
										case attribute.type
											when 'Bool'
												if attribute.isList
													include ../robots/checkboxList.pug
												else
													include ../robots/checkbox.pug
											when 'Code'
												include ../robots/code.pug
											when 'Color'
												if attribute.isList
													include ../robots/colorList.pug
												else
													include ../robots/color.pug
											when 'Date'
												if attribute.isList
													include ../robots/dateList.pug
												else
													include ../robots/date.pug
											when 'Image'
												if attribute.isList
													include ../robots/imageList.pug
												else
													include ../robots/image.pug
											when 'Number'
												if attribute.isList
													include ../robots/numberList.pug
												else
													include ../robots/number.pug
											when 'Radio'
												include ../robots/radio.pug
											when 'Select'
												if attribute.isList
													include ../robots/selectList.pug
												else
													include ../robots/select.pug
											when 'Wysiwyg'
												if attribute.isList
													include ../robots/wysiwygList.pug
												else
													include ../robots/wysiwyg.pug
											when 'String'
											default
												if attribute.isList
													include ../robots/stringList.pug
												else
													include ../robots/string.pug

							.panel-footer.text-right
								button.btn.btn-primary(duck-button='submit') Save

				- var factoryParts = parts && parts.filter((_part) => (_part.Id === factory.Id));
				for part in factoryParts ? factoryParts : []
					.panel.panel-default(data-function='accordion', duck-table='RobotParts', duck-function='update', duck-key='Id', duck-key-value= part.Id, duck-range='_Id', duck-range-value= part._Id)
						.panel-heading(role='tab', aria-expanded= 'false')= part.name || 'Unnamed'
						div(role='tabpanel', aria-hidden= 'true')
							.panel-body
								.form-horizontal
									for attribute in factory.schema ? factory.schema : []
										- value = part[attribute.name]; name = attribute.name; title = attribute.name;
										case attribute.type
											when 'Bool'
												if attribute.isList
													include ../robots/checkboxList.pug
												else
													include ../robots/checkbox.pug
											when 'Code'
												include ../robots/code.pug
											when 'Color'
												if attribute.isList
													include ../robots/colorList.pug
												else
													include ../robots/color.pug
											when 'Date'
												if attribute.isList
													include ../robots/dateList.pug
												else
													include ../robots/date.pug
											when 'Image'
												if attribute.isList
													include ../robots/imageList.pug
												else
													include ../robots/image.pug
											when 'Number'
												if attribute.isList
													include ../robots/numberList.pug
												else
													include ../robots/number.pug
											when 'Radio'
												include ../robots/radio.pug
											when 'Select'
												if attribute.isList
													include ../robots/selectList.pug
												else
													include ../robots/select.pug
											when 'Wysiwyg'
												if attribute.isList
													include ../robots/wysiwygList.pug
												else
													include ../robots/wysiwyg.pug
											when 'String'
											default
												if attribute.isList
													include ../robots/stringList.pug
												else
													include ../robots/string.pug

							.panel-footer.text-right
								button.btn.btn-primary(duck-button='submit') Save
			else
				p.lead You need to create a #[strong Robot Factory] first.
				
			h2(data-position='4') Robots
			.panel.panel-default(data-function='accordion', duck-table='Robots', duck-function='add', duck-key='Id', duck-key-value= site.Id, duck-range='_Id', duck-range-value= uuid())
				.panel-heading New Robot
				.panel-body.form-horizontal
					- name = 'name'; title = 'Name';
					include ../robots/string.pug

					.form-group
						label.col-sm-2.control-label Parts
						.col-sm-10(duck-field='parts', duck-type='array')
							div
								.array-item(duck-type='object')
									.input-group
										.input-group-addon(data-sort='handle')
											i.fa.fa-arrows-v(aria-hidden='true')
										.panel.panel-default(data-function='accordion')
											.panel-heading(role='tab', aria-expanded='false') Part
											.panel-body(role='tabpanel', aria-hidden='true')
												- name = 'name'; title = 'Name';
												include ../robots/string.pug

												- name = 'factory'; title = 'Factory'; options = factories; valueField='_Id'; displayField='name';
												include ../robots/select.pug

												- name = 'isOne'; title = 'Is One';
												include ../robots/checkbox.pug

												.form-group
													label.col-sm-2.control-label Params
													.col-sm-10(duck-field='params', duck-type='array')
														div
															.array-item(duck-type='object')
																.input-group
																	.input-group-addon(data-sort='handle')
																			i.fa.fa-arrows-v(aria-hidden='true')
																	select.form-control(duck-field='field', duck-type='select')
																		option Title
																	.input-group-addon =
																	input.form-control(duck-field='value', duck-type='string')
																	.input-group-btn
																		button.btn.btn-danger(duck-button='delete')
																			i.fa.fa-times(aria-hidden='true')
														p.text-right
															button.btn.btn-default(duck-button='add') Add Param

										.input-group-btn
											button.btn.btn-danger(duck-button='delete')
												i.fa.fa-times(aria-hidden='true')
							p.text-right
								button.btn.btn-default(duck-button='add') Add Part

					- name = 'body'; title = 'Body';
					include ../robots/code.pug
				.panel-footer.text-right
					button.btn.btn-primary(duck-button='submit') Save

			for robot in robots ? robots : []
				.panel.panel-default(data-function='accordion', duck-table='Robots', duck-function='update', duck-key='Id', duck-key-value= robot.Id, duck-range='_Id', duck-range-value= robot._Id)
					.panel-heading= robot.name
					.panel-body.form-horizontal
						- name = 'name'; title = 'Name'; value = robot.name;
						include ../robots/string.pug

						.form-group
							label.col-sm-2.control-label Parts
							.col-sm-10(duck-field='parts', duck-type='array')
								div
									for part in robot.parts ? robot.parts : [{}]
										.array-item(duck-type='object')
											.input-group
												.input-group-addon(data-sort='handle')
													i.fa.fa-arrows-v(aria-hidden='true')
												.panel.panel-default(data-function='accordion')
													.panel-heading(role='tab', aria-expanded='false')= part.name
													.panel-body(role='tabpanel', aria-hidden='true')
														- name = 'name'; title = 'Name'; value = part.name;
														include ../robots/string.pug

														- name = 'factory'; title = 'Factory'; options = factories; valueField='_Id'; displayField='name'; value =  part.factory;
														include ../robots/select.pug

														- name = 'isOne'; title = 'Is One';
														include ../robots/checkbox.pug

														.form-group
															label.col-sm-2.control-label Params
															.col-sm-10(duck-field='params', duck-type='array')
																div
																	for param in part.params
																		.array-item(duck-type='object')
																			.input-group
																				.input-group-addon(data-sort='handle')
																						i.fa.fa-arrows-v(aria-hidden='true')
																				select.form-control(duck-field='field', duck-type='select')
																					option Title
																				.input-group-addon =
																				input.form-control(duck-field='value', duck-type='string', value= param.value)
																				.input-group-btn
																					button.btn.btn-danger(duck-button='delete')
																						i.fa.fa-times(aria-hidden='true')
																p.text-right
																	button.btn.btn-default(duck-button='add') Add Param

												.input-group-btn
													button.btn.btn-danger(duck-button='delete')
														i.fa.fa-times(aria-hidden='true')
								p.text-right
									button.btn.btn-default(duck-button='add') Add Part
						
						- name = 'body'; title = 'Body'; value = robot.body
						include ../robots/code.pug

					.panel-footer.text-right
						button.btn.btn-primary(duck-button='submit') Save
	script.
		void function initAdminPage($, duck){
			
		}(jQuery.noConflict(), duck);

	.modal.fade#ImagePickerModal(tabindex='-1', role='dialog', style='z-index: 2000;')
		.modal-dialog.file-picker
			.modal-content
				.modal-body
					.file-manager(duck-filepicker)
						aside.file-manager--directory(data-file-manager='directory')
							ul
						.file-manager--main
							header.file-manager--header
								h2(data-file-manager="current-directory") Root

								.input-group
									.input-group-btn
										button.btn.btn-default.mr-Sm(data-file-manager='delete-start', disabled) #[i.fa.fa-times(aria-hidden='true')] Delete
										//button.btn.btn-default(data-file-manager='rename', disabled, data-icon='fa fa-font') &nbsp;Rename

									input.form-control(type='text', data-file-manager='search', placeholder='Search...')
									.input-group-addon
										i.fa.fa-search(aria-hidden='true')
									.input-group-btn
										button.btn.btn-default.ml-Sm(data-file-manager='upload', data-icon='fa fa-upload') &nbsp;Upload
							
							.file-manager--sort(data-file-manager='sort')
								.btn-group
									button.btn.btn-default.active(data-sort='date', data-icon='fa fa-calendar')
									button.btn.btn-default(data-sort='name', data-icon='fa fa-font')
								.hidden(data-sort-direction='desc')

							div(data-function='scroll', style='height: 75vh')
								div(data-scroll='content-wrapper')
									.file-manager--content(data-file-manager='content', data-loaded='false', data-scroll='content')

								div(data-scroll='scrollbar')
									button

							.file-manager--prompt.hidden(data-file-manager='uploader')
								.prompt--content
									.uploader(data-function='uploader')
										h2.uploader--header Upload Files to:&nbsp;
											span.fw-B(data-file-manager='current-directory') Root
										.uploader--file-drop(data-uploader='file-drop')
											span Drag &amp; Drop Your Files Here or Click to Upload
										h3.uploader--sub-header Files to Upload
										ul.uploader--files(data-uploader='files')

										button.btn.btn-secondary.uploader--submit(data-uploader='upload', disabled) Upload
										button.btn.btn-warning(data-uploader='cancel') Cancel

							.file-manager--prompt.hidden(data-file-manager='delete-prompt')
								.prompt--content
									.alert.alert-danger.file-manager--delete
										h2 Are you sure you want to delete <span class='js-grammar'>this</span>?

										.row
											.col-xs-6
												button.btn-danger.btn-lg(data-file-manager='delete') Delete
											.col-xs-6
												button.btn-default.btn-lg(data-file-manager='delete-cancel') Cancel
				.modal-footer
					button.btn.btn-default(type='button', data-dismiss='modal') Close
					button.btn.btn-primary(type='button', duck-filepicker='select') Select