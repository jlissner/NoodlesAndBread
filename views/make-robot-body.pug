extends layout.pug

append head
	script(src='3rdParty/codemirror/codemirror.js')
	script(src='3rdParty/codemirror/mode/pug/pug.js')
	link(rel='stylesheet', href='3rdParty/codemirror/codemirror.css')

block content
	.container
		.page-header
			h1 Create a Robot Body
		p.lead A <em>Robot Body</em> will shape your <em>Robot</em> and tell it what to look like.

		.panel.panel-default
			.panel-heading
				h2.panel-title The Basics
			.panel-body.form-horizontal
				.alert.alert-info
					p Lets get started with the easy stuff :). The <strong>Body Name</strong> is what it will show up as when chosing a body for your <strong>Robot</strong>. The <strong>Factory</strong> dictaces what kind of <strong>Robots</strong> will be able to use this <strong>Body</strong>.

				.form-group
					label.col-sm-2.control-label Body Name
					.col-sm-10
						input.form-control.js-body-name(type='text', placeholder='Name')

				.form-group
					label.col-sm-2.control-label Factory
					.col-sm-10
						select.form-control.js-factory-select
							option(value='false') Select a Factory!
							for factory in factories ? factories : []
								option(value= factory.Id)= factory.name

			.panel-footer.text-right: a(href='/make-robot-factory').btn.btn-primary Click here to make a new factory!

		.panel.panel-default
			.panel-heading Test Robot
			.panel-body
				.alert.alert-info
					p You can create a test robot to see a preview of what the body will look like on a real <strong>Robot</strong>! What your robot has is decided by the <strong>Factory</strong> you choose. If something needs to be changed, you can edit your <strong>Factory</strong>; but doing so might break your other robots.
				p.text-right
					a.btn.btn-danger(href='#') Edit your Factory

				.js-test-data.form-horizontal
					p Please select a factory, then we can work on making your test <strong>Robot</strong>

		.panel.panel-primary
			.panel-heading Body
			table.table.table-bordered
				thead
					tr
						th.col-xs-6 Body
						th.col-xs-6 Preview
				tbody
					tr
						td(style='padding: 0;').js-body-code
						td: .js-preview

			.panel-footer.text-right
					button.ja-see-preview.btn.btn-primary Preview

		div(style='position: relative;')
			.js-error.alert.alert-danger.text-center(style='position: absolute; bottom: 0; right: 0; width: 300px;display: none;')
				p You must select a #[strong Factory], give the #[strong Body] a #[strong Name], and make sure the #[strong Body] has at least 1 line of text.

		.form-group
			.text-right
				button#SaveBody.btn.btn-success Save


	script.
		void function initRobot($, duck){
			const RobotBody = duck('RobotBodies')
			const factories = !{JSON.stringify(factories)};
			const $factorySelect = $('.js-factory-select');
			const $body = $('.js-body-code');
			const $testData = $('.js-test-data');
			const $preview = $('.js-preview');
			const $previewButton = $('.ja-see-preview');
			const $save = $('#SaveBody');
			const $error = $('.js-error');
			const $name = $('.js-body-name');
			const codemirrorOptions = {
				smartIndent: true,
				indentWithTabs: true,
				lineNumbers: true,
			};
			const codemirror = CodeMirror($body[0], codemirrorOptions);

			function previewBody(e) {
				e.stopPropagation();
				e.preventDefault();
				
				const testData = {};

				$testData.find('.form-group').each((index, item) => {
					const $item = $(item);

					testData[$item.find('.control-label').text()] = $item.find('.form-control').val();
				});

				$.ajax({
					url: '/renderPug',
					data: {pug: codemirror.getValue(), locals: testData},
					success: (data) => {
						$preview.html(data);
					},
					error: (err) => {
						console.error(err)
					}
				});
			}

			function newAttribute(attribute) {
				const name = attribute.name;
				const type = attribute.type;
				const id = attribute.id;

				switch (type) {
					case "String":
					default: {
						return `
							<div class='form-group'>
								<label class='col-sm-2 control-label'>${name}</label>
								<div class='col-sm-10'>
									<input class='form-control' type='text' placeholder='${name}' />
								</div>
							</div>
						`
					}
				}
			}

			$previewButton.on('click', previewBody);
			$factorySelect.on('input', (e) => {
				e.stopPropagation();
				e.preventDefault();

				const factory = factories.filter((_factory) => _factory.Id === $factorySelect.val())[0];

				if (!factory) {
					$testData.html('<p>Please select a factory, then we can work on making your test <strong>Robot</strong></p>');
					return;
				}
				$testData.html('');

				factory.schema.forEach((attribute) => {
					$testData.append(newAttribute(attribute));
				});

			});

			$save.on('click', (e) => {
				e.stopPropagation();
				e.preventDefault();

				const name = $name.val();
				const factoryId = $factorySelect.val();
				const text = codemirror.getValue();

				if(!name || !text || factoryId === 'false') {
					$error.slideDown(270);
					setTimeout(()=>{$error.slideUp(270);}, 3000)

					return;
				}

				const newBody = {
					name,
					factory: factoryId,
					body: text
				}

				RobotBody.add(newBody, () => {}, (err) => {console.error(err)});
			});

		}(jQuery.noConflict(), duck);
